service: <%- application_code_kebab %>

# enable required plugins, in order to make what we want
plugins:
    - serverless-webpack
    - serverless-offline

# serverless supports different cloud environments to run at.
# we will be deploying and running this project at AWS cloud with Node v8.10 environment
provider:
    name: aws
    runtime: nodejs14.x
    region: eu-central-1
    stage: dev

# here we describe our lambda function
functions:
<% if(use_contact_form) { %>
    sendMessage: # function name
        handler: src/lambdas/sendMessage/handler.handler # where the actual code is located
        # to call our function from outside, we need to expose it to the outer world
        # in order to do so, we create a REST endpoint
        events:
            - http:
                  path: message # path for the endpoint
                  method: post # HTTP method for the endpoint
<% } %>
<% if(use_function) { %>
    <%- function_name %>: # function name
        handler: src/lambdas/<%- function_name %>/handler.handler # where the actual code is located
        # to call our function from outside, we need to expose it to the outer world
        # in order to do so, we create a REST endpoint
        events:
            - http:
                  path: <%- function_name %> # path for the endpoint
                  method: post # HTTP method for the endpoint
<% } %>
<% if(use_api) { %>
    runAPI: # function name
        handler: src/lambdas/runAPI/handler.handler # where the actual code is located
        # to call our function from outside, we need to expose it to the outer world
        # in order to do so, we create a REST endpoint
        events:
            - http:
                  path: /<%- api_path_prefix %>/{any+}
                  method: post
<% } %>

custom:
    webpack:
        webpackConfig: 'webpack.config.js' # name of webpack configuration file
        includeModules: true # add excluded modules to the bundle
        packager: 'yarn' # package manager we use
    serverless-offline:
        useChildProcesses: true
        httpPort: <%- local_development_port %>
        websocketPort: <%- local_development_port + 1 %>
        lambdaPort: <%- local_development_port + 2 %>
